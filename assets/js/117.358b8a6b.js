(window.webpackJsonp=window.webpackJsonp||[]).push([[117],{618:function(s,t,a){"use strict";a.r(t);var r=a(3),n=Object(r.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"},[s._v("介绍")]),a("p",[s._v("动态路由匹配 (多个路由映射一个组件)  "),a("br"),s._v("\n参数设置"),a("br"),s._v("\n参数获取"),a("br")])]),s._v(" "),a("h1",{attrs:{id:"动态路由匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态路由匹配"}},[s._v("#")]),s._v(" 动态路由匹配")]),s._v(" "),a("h2",{attrs:{id:"动态路由的必要性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态路由的必要性"}},[s._v("#")]),s._v(" 动态路由的必要性")]),s._v(" "),a("p",[s._v("我们经常需要把某种模式匹配到的所有路由，"),a("strong",[s._v("全都映射到同个组件")]),s._v("。\n如果我们一个一个定义路由规则的话也是可以的\n但是路由规则的复用性就会变得很差")]),s._v(" "),a("p",[s._v("例如，我们有一个 "),a("code",[s._v("User")]),s._v("组件，对于所有 "),a("code",[s._v("ID")]),s._v(" 各不相同的用户，都要使用这个组件来渲染。\n那么，我们可以在"),a("code",[s._v("vue-router")]),s._v(" 的路由路径中使用“"),a("strong",[s._v("动态路径参数")]),s._v("”("),a("code",[s._v("dynamic segment")]),s._v(") 来达到这个效果：")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" User "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  template"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'<div>User</div>'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" router "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("VueRouter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  routes"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 动态路径参数 以冒号开头")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" path"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/user/:id'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" component"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" User "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[a("strong",[s._v("动态路径参数 以冒号开头")])]),s._v(" "),a("h2",{attrs:{id:"动态路由参数设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态路由参数设置"}},[s._v("#")]),s._v(" 动态路由参数设置")]),s._v(" "),a("p",[a("strong",[s._v("动态路由")]),s._v("指的是：把"),a("code",[s._v("Hash 地址")]),s._v("中"),a("strong",[s._v("可变的部分")]),s._v("定义为参数项，从而提高路由规则的复用性。")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("动态路由参数的设置:")]),s._v(" "),a("ol",[a("li",[s._v("使用场景：某种模式匹配到的所有路由，全都映射到同个组件")]),s._v(" "),a("li",[s._v("“路由参数”使用"),a("code",[s._v("冒号 :")]),s._v("标记")])]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'about'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("          \n      path"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/about/:id'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//设置参数")]),s._v("\n      component"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" about"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("动态路由参数的匹配")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("router"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("link to"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/about/1"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("广州"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("router"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("link"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" \n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("router"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("link to"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/about/2"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("深圳"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("router"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("link"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("router"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("link to"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/about/3"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("上海"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("router"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("link"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])])]),s._v(" "),a("p",[a("strong",[s._v("注意")]),s._v("：")]),s._v(" "),a("ol",[a("li",[s._v("如果没有传递参数，则路由无法匹配")]),s._v(" "),a("li",[a("strong",[s._v("不用在传递参数的时候添加:了")])])]),s._v(" "),a("h2",{attrs:{id:"动态路由参数获取"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态路由参数获取"}},[s._v("#")]),s._v(" 动态路由参数获取")]),s._v(" "),a("h3",{attrs:{id:"方法一"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法一"}},[s._v("#")]),s._v(" 方法一")]),s._v(" "),a("ol",[a("li",[s._v("在"),a("code",[s._v("mounted钩子函数")]),s._v("中添加代码")]),s._v(" "),a("li",[s._v("通过"),a("code",[s._v("$route.params")]),s._v("获取路由参数，它是一个"),a("strong",[s._v("对象")])])]),s._v(" "),a("h3",{attrs:{id:"方法二"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法二"}},[s._v("#")]),s._v(" 方法二")]),s._v(" "),a("p",[s._v("为了简化路由参数的获取形式，"),a("code",[s._v("vue-router")]),s._v("允许在路由规则中开启"),a("code",[s._v("props")]),s._v("传参\n1.在路由规则中设置"),a("code",[s._v("props:true")])]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("           \n\t name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'about'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//命名路由")]),s._v("\n\t path"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/about/:id'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t component"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" about"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t props"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//可在该组件中, 以props的形式 接收 路由规则所匹配到的参数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("2.在路由所映射的组件中使用"),a("code",[s._v("props")]),s._v("接收路由参数(直接"),a("strong",[s._v("定义")]),a("code",[s._v("props成员")]),s._v("接收路由规则中所匹配到的参数)")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//通过props接收路由参数")]),s._v("\n  props"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"id"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"动态路由参数-监听变化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态路由参数-监听变化"}},[s._v("#")]),s._v(" 动态路由参数 监听变化")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("当使用动态路由参数时，如果只是参数的变化，原来的组件实例会被复用。因为两个路由都渲染同个组件，比起销毁再创建，"),a("strong",[s._v("复用则显得更加高效")])])]),s._v(" "),a("li",[a("p",[s._v("意味着组件的生命周期钩子不会再被调用(mounted不会再触发)")])]),s._v(" "),a("li",[a("p",[s._v("我们可以"),a("code",[s._v("watch (监测变化) $route")]),s._v("对象，以监听路由参数的变化")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[s._v("  watch"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("$route")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("to"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])])])])}),[],!1,null,null,null);t.default=n.exports}}]);