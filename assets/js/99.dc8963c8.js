(window.webpackJsonp=window.webpackJsonp||[]).push([[99],{603:function(t,s,a){"use strict";a.r(s);var e=a(3),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"},[t._v("介绍")]),a("p",[t._v("vue中的组件 "),a("br"),t._v("\n全局组件的创建和使用 "),a("br"),t._v("\n组件化开发 "),a("br"),t._v("\n单文件组件的创建"),a("br")])]),t._v(" "),a("h1",{attrs:{id:"vue中的组件的概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue中的组件的概念"}},[t._v("#")]),t._v(" vue中的组件的概念")]),t._v(" "),a("ol",[a("li",[t._v("一个组件相当于是一个小"),a("strong",[t._v("模块")])]),t._v(" "),a("li",[t._v("它是"),a("code",[t._v("html")]),t._v("、"),a("code",[t._v("css")]),t._v("与"),a("code",[t._v("js")]),t._v("的"),a("strong",[t._v("集合体")]),t._v("，可以用于描述页面中的某个结构(模块)")]),t._v(" "),a("li",[t._v("组件是独立存在于我们的vue应用里面的，意味着它"),a("strong",[t._v("可以复用")]),t._v("，不需要我们将结构代码或者是业务代码重复的编写，而且也很"),a("strong",[t._v("方便进行维护")])]),t._v(" "),a("li",[t._v("在Vue中组件的出现是为了拆分Vue实例的代码量，让我们以不同的组件来划分不同的功能模块")])]),t._v(" "),a("h2",{attrs:{id:"全局组件的创建-和-使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局组件的创建-和-使用"}},[t._v("#")]),t._v(" 全局组件的创建 和 使用")]),t._v(" "),a("p",[a("strong",[t._v("概念")]),t._v("：全局组件指的是可以在应用程序中的任何位置使用的组件，在vue中，组件是可复用的Vue实例\n"),a("strong",[t._v("语法")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("Vue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("component")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("组件名称"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("组件的配置"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("**配置说明(**这里只列举其中两个)：")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("template")]),t._v(":用于描述当前组件的结构")]),t._v(" "),a("li",[a("code",[t._v("data")]),t._v("：用于定义当前组件的关联的数据\n"),a("strong",[t._v("一个示例")]),t._v("：")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("Vue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("component")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mycom'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义结构")]),t._v("\n      template"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<div>\n                  \t <h1>我是组件的内容---{{msg}}</h1>\n                 </div>  ")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义数据")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          msg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 'hello\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("h3",{attrs:{id:"全局组件的创建-template"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局组件的创建-template"}},[t._v("#")]),t._v(" 全局组件的创建 -- template")]),t._v(" "),a("p",[a("strong",[t._v("作用")]),t._v("：用于描述当前组件的"),a("strong",[t._v("结构")]),t._v("，描述结构使用html\n"),a("strong",[t._v("细节")]),t._v("："),a("code",[t._v("template")]),a("strong",[t._v("只能有一个根元素")]),t._v("，意味着如果有多个元素，我们需要将其包裹到一个父容器中，这个父容器一般可以使用div\n"),a("strong",[t._v("示例")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("template"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\n                 <div>\n                 \t <h1>我是组件的内容---{{msg}}</h1>\n                 \t <button>点我啊</button>\n                 </div> \n                ")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[a("strong",[t._v("报错信息")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Component template should contain exactly one root element. If you are using v-if on multiple elements, use v-else-if to chain them instead.\n翻译：组件的模板只能包含一个根元素，除非你使用if分支进行判断\n解决：将多个元素包裹到一个根元素中，这种根元素一般可以使用div\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h3",{attrs:{id:"全局组件的创建-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局组件的创建-data"}},[t._v("#")]),t._v(" 全局组件的创建 -- data")]),t._v(" "),a("p",[a("strong",[t._v("作用")]),t._v("：用于定义当前组件所需要使用到的数据\n"),a("strong",[t._v("细节")]),t._v("：组件的"),a("code",[t._v("data")]),a("strong",[t._v("必须是一个函数")]),t._v("，"),a("strong",[t._v("且返回一个对象")]),t._v(",以便每个实例可以维护一份被返回对象的独立拷贝\n"),a("strong",[t._v("示例")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t成员"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n                     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[a("strong",[t._v("报错信息")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('1.The "data" option should be a function that returns a per-instance value in component definitions.\n翻译：组件中的data选项必须是一个函数，同时函数要为每个实例返回一个值\n原因：组件是可复用的，为了让每个组件可以维护一个属于自己的数据，要求data必须是一个函数\n解决：将data定义为一个函数\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("2.data functions should return an object\n翻译：data函数必须返回一个对象\n解决：在data函数中通过return返回一个对象\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h3",{attrs:{id:"全局组件的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局组件的使用"}},[t._v("#")]),t._v(" 全局组件的使用")]),t._v(" "),a("p",[a("strong",[t._v("使用方式")]),t._v("：")]),t._v(" "),a("ol",[a("li",[t._v("组件是html,js,css的集合，类似于一个元素，我们可以将组件作为自定义元素来使用")]),t._v(" "),a("li",[t._v("从表现形式上看也确实像使用自定义标签")]),t._v(" "),a("li",[t._v("你可以将组件进行任意次数的复用")]),t._v(" "),a("li",[t._v("组件要先定义再使用")])]),t._v(" "),a("p",[a("strong",[t._v("示例")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"app"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" 使用组件，就像使用一个标签一样，组件的名称就是这个标签名 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("mycom"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mycom"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[a("strong",[t._v("报错信息")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('1.Unknown custom element: <***> - did you register the component correctly? For recursive components, make sure to provide the "name" option.\n翻译：未知的用户元素***,你是否正确的注册(创建)了这个组件呢？如果是递归组件调用，那么确保组件有name属性\n原因：在我们当前的场景中，是因为你没有在vue实例进行处理之前创建好这个first组件 或者 确实没有创建这个名称的组件\n解决：将全局组件在vue实例的 前面 创建好\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h2",{attrs:{id:"单文件组件-跟-全局组件-对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单文件组件-跟-全局组件-对比"}},[t._v("#")]),t._v(" 单文件组件 跟 全局组件 对比")]),t._v(" "),a("ol",[a("li",[t._v("从代码及工程化角度考虑\n"),a("code",[t._v("Vue.component")]),t._v("在复杂的项目中有明显的"),a("strong",[t._v("缺点")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("全局定义")]),t._v(" ("),a("code",[t._v("Global definitions")]),t._v(") 强制要求每个 component 中的命名不得重复")]),t._v(" "),a("li",[a("strong",[t._v("字符串模板")]),t._v(" ("),a("code",[t._v("String templates")]),t._v(") 缺乏语法高亮，在 HTML 有多行的时候，需要单独的处理")]),t._v(" "),a("li",[a("strong",[t._v("不支持 CSS")]),t._v(" ("),a("code",[t._v("No CSS support")]),t._v(") 意味着当 HTML 和 JavaScript 组件化时，CSS 明显被遗漏")]),t._v(" "),a("li",[a("strong",[t._v("没有构建步骤")]),t._v(" ("),a("code",[t._v("No build step")]),t._v(") 限制只能使用 HTML 和 ES5 JavaScript，而不能使用预处理器，如 Pug (formerly Jade) 和 Babel选择器：#id名（# 和 id 之间没有空格）\n单文件组件为以上所有问题提供了解决方法，并且还可以使用 "),a("code",[t._v("webpack")]),t._v("或 "),a("code",[t._v("Browserify")]),t._v(" 等构建工具")])])]),t._v(" "),a("li",[t._v("从公司开发角度而言：\n几乎所有的vue项目开发都是使用单文件组件，也就是常说的 "),a("strong",[t._v("组件化开发")])])]),t._v(" "),a("h2",{attrs:{id:"组件化开发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件化开发"}},[t._v("#")]),t._v(" 组件化开发")]),t._v(" "),a("ol",[a("li",[t._v("组件化开发指的是：根据"),a("strong",[t._v("封装")]),t._v("的思想，把页面上可重用的部分封装为组件，从而方便项目的开发和维护")]),t._v(" "),a("li",[t._v("组件化开发的好处\n"),a("ol",[a("li",[t._v("提高了前端代码的"),a("strong",[t._v("复用性")]),t._v("和"),a("strong",[t._v("灵活性")])]),t._v(" "),a("li",[t._v("提升了"),a("strong",[t._v("开发效率")]),t._v("和后期的"),a("strong",[t._v("可维护性")])])])]),t._v(" "),a("li",[t._v("vue 是一个完全支持组件化开发的框架。vue 中规定组件的后缀名是 "),a("code",[t._v(".vue")]),t._v("。之前接触到的 App.vue 文件本质上就是一个 vue 的组件")]),t._v(" "),a("li",[t._v("在vue中，扩展名为"),a("code",[t._v(".vue")]),t._v("的文件也称为"),a("strong",[t._v("单文件组件")]),t._v("，意思是使用一个文件来描述一个组件")])]),t._v(" "),a("h2",{attrs:{id:"单文件组件的创建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单文件组件的创建"}},[t._v("#")]),t._v(" 单文件组件的创建")]),t._v(" "),a("h3",{attrs:{id:"概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("p",[t._v("扩展名为"),a("code",[t._v(".vue")]),t._v("的文件就是单文件组件")]),t._v(" "),a("h3",{attrs:{id:"结构说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结构说明"}},[t._v("#")]),t._v(" 结构说明")]),t._v(" "),a("p",[t._v("单文件组件结构的基本说明")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("template")]),t._v(":用于描述组件的结构")]),t._v(" "),a("li",[a("code",[t._v("script")]),t._v(":用于添加组件的功能(script行为)，使用export default暴露当前的组件实例")]),t._v(" "),a("li",[a("code",[t._v("style")]),t._v(":用于设置组件的样式")])]),t._v(" "),a("h3",{attrs:{id:"细节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#细节"}},[t._v("#")]),t._v(" 细节")]),t._v(" "),a("h4",{attrs:{id:"关于template"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于template"}},[t._v("#")]),t._v(" 关于template")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("template")]),t._v("模板结构"),a("strong",[t._v("只能有一个根元素")]),t._v("（vue2.0中的规则）")]),t._v(" "),a("li",[a("code",[t._v("<template>")]),t._v(" 是 vue 提供的"),a("strong",[t._v("容器标签")]),t._v("，只起到包裹性质的作用，"),a("strong",[t._v("它不会被渲染为真正的 DOM 元素")])])]),t._v(" "),a("h4",{attrs:{id:"关于script"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于script"}},[t._v("#")]),t._v(" 关于script")]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[a("code",[t._v("export default")]),t._v("用于暴露当前的组件实例，default表示默认就会暴露的成员")]),t._v(" "),a("li",[t._v("单文件组件的"),a("code",[t._v("data")]),t._v("必须是一个函数，且返回一个对象")])]),t._v(" "),a("h4",{attrs:{id:"关于-style"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于-style"}},[t._v("#")]),t._v(" 关于 style")]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[t._v("样式"),a("code",[t._v("style")]),t._v("可以使用预处理器，"),a("code",[t._v("scoped")]),t._v("可以用于定义"),a("strong",[t._v("局部作用域样式")])]),t._v(" "),a("li",[t._v("其中 "),a("code",[t._v("<style>")]),t._v("标签上的 "),a("code",[t._v('lang="css"')]),t._v(" 属性是可选的，它表示所使用的样式语言。默认只支持普通的 css 语法，可选值还有"),a("code",[t._v("less")]),t._v("、"),a("code",[t._v("scss")]),t._v(" 等")]),t._v(" "),a("li",[t._v("在 "),a("code",[t._v("<style>")]),t._v(" 标签上添加"),a("code",[t._v('lang="less"')]),t._v("属性，即可使用 less 语法编写组件的样式")]),t._v(" "),a("li",[t._v("每个组件中"),a("strong",[t._v("必须包含")]),t._v(" "),a("code",[t._v("template")]),t._v("模板结构，而 "),a("code",[t._v("script 行为")]),t._v("和 "),a("code",[t._v("style 样式")]),t._v("是"),a("strong",[t._v("可选")]),t._v("的组成部分")])])])}),[],!1,null,null,null);s.default=n.exports}}]);