(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{632:function(s,t,e){"use strict";e.r(t);var a=e(3),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"title"},[s._v("介绍")]),e("p",[s._v("setup()函数是 vue3 中，专门为组件提供的新属性。它为我们使用 vue3 的 新特性提供了统一的入口"),e("br"),s._v("\nsetup函数是处于 生命周期函数beforeCreate和 Created两个钩子函数之前的函数")])]),s._v(" "),e("h2",{attrs:{id:"vue3和vue2常见的使用差异"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue3和vue2常见的使用差异"}},[s._v("#")]),s._v(" vue3和vue2常见的使用差异")]),s._v(" "),e("p",[s._v("学习路径")]),s._v(" "),e("p",[s._v("单文件组件的渲染\nsetup\n单文件组件的template\n子传父的实现")]),s._v(" "),e("h2",{attrs:{id:"单文件组件的渲染"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#单文件组件的渲染"}},[s._v("#")]),s._v(" 单文件组件的渲染")]),s._v(" "),e("p",[s._v("1.通过解构的方式获取"),e("code",[s._v("createApp")]),s._v("\n2.通过"),e("code",[s._v("createApp")]),s._v("创建应用")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import { createApp } from 'vue'\nimport App from './App.vue'\n// import './index.css'\n\ncreateApp(App).mount('#app')\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("h2",{attrs:{id:"单文件组件的template"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#单文件组件的template"}},[s._v("#")]),s._v(" 单文件组件的template")]),s._v(" "),e("p",[s._v("vue 规定：每个组件对应的模板结构，需要定义到 "),[s._v(" 节点中\n"),e("strong",[s._v("在 vue 3.x 的版本中，"),e("code",[s._v("<template>")]),s._v(" 节点内的 DOM 结构支持多个根节点。")])]],2),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('<template>\n  <h1>{{ msg }}</h1>\n  <button @click="count++">count is: {{ count }}</button>\n  <p>Edit <code>components/HelloWorld.vue</code> to test hot module replacement.</p>\n</template>\n\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("注意："),e("code",[s._v("<template>")]),s._v(" 是 vue 提供的容器标签，只起到包裹性质的作用，"),e("strong",[e("code",[s._v("<template>")]),s._v(" 它不会被渲染为真正的 DOM 元素")])]),s._v(" "),e("h1",{attrs:{id:"setup函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#setup函数"}},[s._v("#")]),s._v(" setup函数")]),s._v(" "),e("h2",{attrs:{id:"_1-setup的基本特性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-setup的基本特性"}},[s._v("#")]),s._v(" 1.setup的基本特性")]),s._v(" "),e("ol",[e("li",[e("code",[s._v("setup()")]),s._v("函数是 vue3 中，专门为组件提供的新属性。它为我们使用 vue3 的 新特性提供了统一的入口")]),s._v(" "),e("li",[s._v("setup函数是处于 生命周期函数"),e("code",[s._v("beforeCreate")]),s._v("和 "),e("code",[s._v("Created")]),s._v("两个钩子函数"),e("strong",[s._v("之前")]),s._v("的函数")]),s._v(" "),e("li",[s._v("setup函数中是"),e("strong",[s._v("无法 使用 data 和 methods 中的数据和方法的")])]),s._v(" "),e("li",[s._v("在setup函数中定义的属性和方法最后都是需要 return 出去的，这样我们就可以在模板中直接访问该对象中的属性和方法")])]),s._v(" "),e("h2",{attrs:{id:"_2-在setup中定义响应式数据并返回"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-在setup中定义响应式数据并返回"}},[s._v("#")]),s._v(" 2.在setup中定义响应式数据并返回")]),s._v(" "),e("ol",[e("li",[s._v("解构的方式引入reactive    "),e("code",[s._v("import {reactive} from 'vue'")])]),s._v(" "),e("li",[s._v("创建响应式数据  "),e("code",[s._v("let state= reactive({数据})")])]),s._v(" "),e("li",[s._v("返回"),e("code",[s._v("return {state}")])]),s._v(" "),e("li",[s._v("在模板中使用")])]),s._v(" "),e("h2",{attrs:{id:"_3-在setup中定义函数并使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-在setup中定义函数并使用"}},[s._v("#")]),s._v(" 3.在setup中定义函数并使用")]),s._v(" "),e("ol",[e("li",[s._v("在setup中定义函数")]),s._v(" "),e("li",[s._v("同样需要返回")]),s._v(" "),e("li",[s._v("在模板中调用函数："),e("code",[s._v('<button @click="login">提交</button>')])])]),s._v(" "),e("p",[s._v("代码演示")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('<template>\n  <div>\n    <p>{{ state.msg }}</p>\n    <button @click="getMsg">点击</button>\n  </div>\n</template>\n\n<script>\nimport { reactive } from "vue";\nexport default {\n  name: "App",\n  setup() {\n    let state = reactive({\n      msg: "hello lsh",\n    });\n    function getMsg() {\n      state.msg = "lsh dsb";\n      console.log(state.msg);\n    }\n    //需要返回定义好的响应式数据\n    return {\n      state,\n      getMsg,\n    };\n  },\n};\n<\/script>\n\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br")])]),e("h2",{attrs:{id:"_4-在setup函数的参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-在setup函数的参数"}},[s._v("#")]),s._v(" 4.在setup函数的参数")]),s._v(" "),e("p",[s._v("对于 setup 函数来说，它接收两个参数，分别为：")]),s._v(" "),e("ol",[e("li",[e("code",[s._v("props")]),s._v("：通过 prop 传递过来的所有数据，我们都可以在这里进行接收。并且获取到的数据将保持响应性")]),s._v(" "),e("li",[e("code",[s._v("context")]),s._v("：context 是一个 JavaScript 对象，这个对象暴露了三个组件的属性，我们可以通过 ‘解构 ’的方式来分别获取这三个属性\n"),e("ol",[e("li",[e("code",[s._v("attrs")]),s._v("： 它是绑定到组件中的 非 props 数据，并且是非响应式的。")]),s._v(" "),e("li",[e("code",[s._v("slots")]),s._v("： 是组件的插槽，同样也不是 响应式的。")]),s._v(" "),e("li",[e("code",[s._v("emit")]),s._v("：是一个方法，相当于 vue2 中的 this.$emit 方法")])])])]),s._v(" "),e("h2",{attrs:{id:"_5-子传父的实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-子传父的实现"}},[s._v("#")]),s._v(" 5. 子传父的实现")]),s._v(" "),e("ol",[e("li",[s._v("子组件发出事件")]),s._v(" "),e("li",[s._v("父组件进行监听")]),s._v(" "),e("li",[s._v("通过ref方法关联节点")]),s._v(" "),e("li",[s._v("为指定的节点赋值\n"),e("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210420211856824.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzMTU3NjEy,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})])])])}),[],!1,null,null,null);t.default=n.exports}}]);