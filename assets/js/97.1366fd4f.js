(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{599:function(v,_,e){"use strict";e.r(_);var t=e(3),a=Object(t.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"title"},[v._v("介绍")]),e("p",[v._v("vue的基础概念"),e("br"),v._v("\nvue的基本特点"),e("br")])]),v._v(" "),e("h1",{attrs:{id:"vue的基础概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue的基础概念"}},[v._v("#")]),v._v(" vue的基础概念")]),v._v(" "),e("h2",{attrs:{id:"_1-什么是vue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是vue"}},[v._v("#")]),v._v(" 1.什么是vue")]),v._v(" "),e("p",[e("code",[v._v("vue")]),v._v("不是一门语言，只是通过JavaScript封装的一套"),e("strong",[v._v("用于构建用户界面")]),v._v("的前端"),e("strong",[v._v("框架")]),v._v("，\n"),e("code",[v._v("vue")]),v._v("有自己独特的API和开发模式，\n"),e("code",[v._v("vue")]),v._v("最主要的使用场景是进行"),e("strong",[v._v("单页应用开发")]),v._v("，能够在我们进行web单页开发的时候大大提升开发效率")]),v._v(" "),e("h2",{attrs:{id:"_2-什么是单页应用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-什么是单页应用"}},[v._v("#")]),v._v(" 2.什么是单页应用")]),v._v(" "),e("p",[v._v("单页面应用程序（英文名："),e("code",[v._v("Single Page Application")]),v._v("）简称 "),e("code",[v._v("SPA")]),v._v("，顾名思义，指的是一个 Web 网站中"),e("strong",[v._v("只有")]),v._v("唯一的一个HTML 页面，所有的"),e("strong",[v._v("功能")]),v._v("与"),e("strong",[v._v("交互")]),v._v("都在这唯一的一个页面内完成。")]),v._v(" "),e("ul",[e("li",[v._v("传统多页面应用\n"),e("ol",[e("li",[v._v("单击链接页面会跳转")]),v._v(" "),e("li",[v._v("页面跳转时页面会整体刷新")])])]),v._v(" "),e("li",[v._v("单页面应用\n"),e("ol",[e("li",[v._v("不需要跳转新的页面")]),v._v(" "),e("li",[v._v("不需要重新加载整个页面")])])]),v._v(" "),e("li",[e("strong",[v._v("单页应用的优点")]),v._v(" "),e("ol",[e("li",[v._v("单页面应用程序将所有的功能局限于一个 web 页面中，仅在该 web 页面初始化时加载相应的资源（ "),e("code",[v._v("HTML")]),v._v("、"),e("code",[v._v("JavaScript")]),v._v(" 和"),e("code",[v._v("CSS")]),v._v("）。")]),v._v(" "),e("li",[v._v("一旦页面加载完成了，SPA 不会因为用户的操作而进行页面的重新加载或跳转。而是利用 JavaScript 动态地变换HTML 的内容，从而实现页面与用户的交互。")]),v._v(" "),e("li",[v._v("良好的交互体验\n"),e("ol",[e("li",[v._v("单页应用的内容的改变不需要重新加载整个页面")]),v._v(" "),e("li",[v._v("获取数据也是通过 Ajax 异步获取")]),v._v(" "),e("li",[v._v("没有页面之间的跳转，不会出现“白屏现象”")])])]),v._v(" "),e("li",[v._v("良好的前后端工作分离模式\n"),e("ol",[e("li",[v._v("后端专注于提供 API 接口，更易实现 API 接口的复用")]),v._v(" "),e("li",[v._v("前端专注于页面的渲染，更利于前端工程化的发展")])])]),v._v(" "),e("li",[v._v("减轻服务器的压力\n"),e("ol",[e("li",[v._v("服务器只提供数据，不负责页面的合成与逻辑的处理，吞吐能力会提高几倍")])])])])])]),v._v(" "),e("h2",{attrs:{id:"_3-vue构建用户页面的特点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-vue构建用户页面的特点"}},[v._v("#")]),v._v(" 3.vue构建用户页面的特点")]),v._v(" "),e("h3",{attrs:{id:"传统方式构建用户界面"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#传统方式构建用户界面"}},[v._v("#")]),v._v(" 传统方式构建用户界面:")]),v._v(" "),e("p",[v._v("在传统的 Web 前端开发中，是基于"),e("code",[v._v("jQuery")]),v._v("+ "),e("code",[v._v("模板引擎")]),v._v("的方式来构建用户界面的\n"),e("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210407203751559.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzMTU3NjEy,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})]),v._v(" "),e("h3",{attrs:{id:"使用-vue构建用户界面"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-vue构建用户界面"}},[v._v("#")]),v._v(" 使用 vue构建用户界面:")]),v._v(" "),e("p",[v._v("使用 vue构建用户界面,解决了 jQuery + 模板引擎 的诸多痛点，极大的提高了前端开发的效率和体验\n"),e("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210407203916369.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzMTU3NjEy,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})]),v._v(" "),e("h2",{attrs:{id:"_4-vue版本的介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-vue版本的介绍"}},[v._v("#")]),v._v(" 4.vue版本的介绍")]),v._v(" "),e("p",[v._v("当前，vue 共有 3 个大版本")]),v._v(" "),e("ol",[e("li",[e("code",[v._v("2.x 版本")]),v._v("的 vue 是目前企业级项目开发中的主流版本")]),v._v(" "),e("li",[e("code",[v._v("3.x 版本")]),v._v("的 vue 于 2020-09-19 发布，生态还不完善，尚未在企业级项目开发中普及和推广")]),v._v(" "),e("li",[e("code",[v._v("1.x 版本")]),v._v("的 vue 几乎被淘汰，不再建议学习与使用")])]),v._v(" "),e("h1",{attrs:{id:"vue的基本特点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue的基本特点"}},[v._v("#")]),v._v(" vue的基本特点")]),v._v(" "),e("h2",{attrs:{id:"_1-渐进式框架"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-渐进式框架"}},[v._v("#")]),v._v(" 1.渐进式框架")]),v._v(" "),e("p",[v._v("vue是一套"),e("strong",[v._v("用于构建用户界面的渐进式框架")]),v._v("，Vue 的核心库"),e("strong",[v._v("只关注视图层")]),v._v("（模板渲染），易于上手，结合多种工具和支持的库，Vue 也完全能够为复杂的单页应用提供驱动")]),v._v(" "),e("ol",[e("li",[v._v("渐进式有一个特点，强制的编码要求较少")]),v._v(" "),e("li",[v._v("按需要使用，不必一竿子把所有的东西都用上")])]),v._v(" "),e("p",[v._v("最核心的 vue，实现了模板引擎的自动渲染（"),e("strong",[v._v("声明式渲染")]),v._v("）")]),v._v(" "),e("ol",[e("li",[e("strong",[v._v("数据驱动视图")])]),v._v(" "),e("li",[e("strong",[v._v("双向数据绑定")])])]),v._v(" "),e("h2",{attrs:{id:"_2-mvvm模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-mvvm模式"}},[v._v("#")]),v._v(" 2.MVVM模式")]),v._v(" "),e("p",[e("code",[v._v("MVVM")]),v._v(" 是 vue 实现"),e("strong",[v._v("数据驱动视图")]),v._v("和"),e("strong",[v._v("双向数据绑定")]),v._v("的核心原理\n"),e("code",[v._v("MVVM")]),v._v("指的是 Model、View 和 ViewModel，它把每个 HTML 页面都拆分成了这三个部分")]),v._v(" "),e("ol",[e("li",[v._v("m:"),e("code",[v._v("model")]),v._v(":数据")]),v._v(" "),e("li",[v._v("v:"),e("code",[v._v("view")]),v._v(":视图-模板")]),v._v(" "),e("li",[v._v("vm:"),e("code",[v._v("ViewModel")]),v._v("（Vue实例）")]),v._v(" "),e("li",[v._v("通过"),e("code",[v._v("Vue实例")]),v._v("来实现数据和模板的关联\n"),e("ul",[e("li",[v._v("在vue中如果更新的数据，页面中对应的渲染内容也会"),e("strong",[v._v("自动的更新")])]),v._v(" "),e("li",[v._v("在vue中如果更新页面中所渲染的变量的数据，data中这个变量的数据也自动会有相应的变化")]),v._v(" "),e("li",[v._v("让我们以后可以将精力专注于数据处理，"),e("strong",[v._v("避免繁琐的dom操作")])])])])]),v._v(" "),e("p",[v._v("在 MVVM 概念中：\n"),e("code",[v._v("Model")]),v._v(" 表示当前页面渲染时所依赖的数据源。\n"),e("code",[v._v("View")]),v._v("表示当前页面所渲染的 DOM 结构。\n"),e("code",[v._v("ViewModel")]),v._v("表示 vue 的实例，它是 MVVM 的核心。")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://img-blog.csdnimg.cn/2021040720500117.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzMTU3NjEy,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}}),v._v("\n当"),e("strong",[v._v("数据源发生变化")]),v._v("时，会被 "),e("code",[v._v("ViewModel")]),v._v("监听到，"),e("code",[v._v("VM")]),v._v(" 会根据最新的数据源自动更新页面的结构\n当"),e("strong",[v._v("表单元素的值发生变化")]),v._v("时，也会被"),e("code",[v._v("VM")]),v._v(" 监听到，"),e("code",[v._v("VM")]),v._v("会把变化过后最新的值自动同步到 Model 数据源中")])])}),[],!1,null,null,null);_.default=a.exports}}]);